/* 
    B4
 */

/* input group */

// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-group {
    position: relative;
    display: flex;
    flex-wrap: wrap; // For form validation feedback
    align-items: stretch;
    width: 100%;

    > .form-control,
    > .form-control-plaintext,
    > .custom-select,
    > .custom-file {
        position: relative; // For focus state's z-index
        flex: 1 1 auto;
        width: 1%;
        min-width: 0; // https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
        margin-bottom: 0;

        + .form-control,
        + .custom-select,
        + .custom-file {
            margin-left: -$input-border-width;
        }
    }

    // Bring the "active" form control to the top of surrounding elements
    > .form-control:focus,
    > .custom-select:focus,
    > .custom-file .custom-file-input:focus ~ .custom-file-label {
        z-index: 3;
    }

    // Bring the custom file input above the label
    > .custom-file .custom-file-input:focus {
        z-index: 4;
    }

    > .form-control,
    > .custom-select {
        &:not(:first-child) {
            @include border-left-radius(0);
        }
    }

    // Custom file inputs have more complex markup, thus requiring different
    // border-radius overrides.
    > .custom-file {
        display: flex;
        align-items: center;

        &:not(:last-child) .custom-file-label,
        &:not(:first-child) .custom-file-label {
            @include border-left-radius(0);
        }
    }

    &:not(.has-validation) {
        > .form-control:not(:last-child),
        > .custom-select:not(:last-child),
        > .custom-file:not(:last-child) .custom-file-label::after {
            @include border-right-radius(0);
        }
    }

    &.has-validation {
        > .form-control:nth-last-child(n + 3),
        > .custom-select:nth-last-child(n + 3),
        > .custom-file:nth-last-child(n + 3) .custom-file-label::after {
            @include border-right-radius(0);
        }
    }
}


// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-prepend,
.input-group-append {
    display: flex;

    // Ensure buttons are always above inputs for more visually pleasing borders.
    // This isn't needed for `.input-group-text` since it shares the same border-color
    // as our inputs.
    .btn {
        position: relative;
        z-index: 2;

        &:focus {
            z-index: 3;
        }
    }

    .btn + .btn,
    .btn + .input-group-text,
    .input-group-text + .input-group-text,
    .input-group-text + .btn {
        margin-left: -$input-border-width;
    }
}

.input-group-prepend {
    margin-right: -$input-border-width;
}

.input-group-append {
    margin-left: -$input-border-width;
}


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-group-text {
    display: flex;
    align-items: center;
    padding: $input-padding-y $input-padding-x;
    margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
    @include font-size($input-font-size); // Match inputs
    font-weight: $font-weight-normal;
    line-height: $input-line-height;
    color: $input-group-addon-color;
    text-align: center;
    white-space: nowrap;
    background-color: $input-group-addon-bg;
    border: $input-border-width solid $input-group-addon-border-color;
    @include border-radius($input-border-radius);
    height: 30px;

    // Nuke default margins from checkboxes and radios to vertically center within.
    input[type="radio"],
    input[type="checkbox"] {
        margin-top: 0;
    }
}


// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg > .form-control:not(textarea),
.input-group-lg > .custom-select {
    height: $input-height-lg;
}

.input-group-lg > .form-control,
.input-group-lg > .custom-select,
.input-group-lg > .input-group-prepend > .input-group-text,
.input-group-lg > .input-group-append > .input-group-text,
.input-group-lg > .input-group-prepend > .btn,
.input-group-lg > .input-group-append > .btn {
    padding: $input-padding-y-lg $input-padding-x-lg;
    @include font-size($input-font-size-lg);
    line-height: $input-line-height-lg;
    @include border-radius($input-border-radius-lg);
}

.input-group-sm > .form-control:not(textarea),
.input-group-sm > .custom-select {
    height: $input-height-sm;
}

.input-group-sm > .form-control,
.input-group-sm > .custom-select,
.input-group-sm > .input-group-prepend > .input-group-text,
.input-group-sm > .input-group-append > .input-group-text,
.input-group-sm > .input-group-prepend > .btn,
.input-group-sm > .input-group-append > .btn {
    padding: $input-padding-y-sm $input-padding-x-sm;
    @include font-size($input-font-size-sm);
    line-height: $input-line-height-sm;
    @include border-radius($input-border-radius-sm);
}

.input-group-lg > .custom-select,
.input-group-sm > .custom-select {
    padding-right: $custom-select-padding-x + $custom-select-indicator-padding;
}


// Prepend and append rounded corners
//
// These rulesets must come after the sizing ones to properly override sm and lg
// border-radius values when extending. They're more specific than we'd like
// with the `.input-group >` part, but without it, we cannot override the sizing.


.input-group > .input-group-prepend > .btn,
.input-group > .input-group-prepend > .input-group-text,
.input-group:not(.has-validation) > .input-group-append:not(:last-child) > .btn,
.input-group:not(.has-validation) > .input-group-append:not(:last-child) > .input-group-text,
.input-group.has-validation > .input-group-append:nth-last-child(n + 3) > .btn,
.input-group.has-validation > .input-group-append:nth-last-child(n + 3) > .input-group-text,
.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {
    @include border-right-radius(0);
}

.input-group > .input-group-append > .btn,
.input-group > .input-group-append > .input-group-text,
.input-group > .input-group-prepend:not(:first-child) > .btn,
.input-group > .input-group-prepend:not(:first-child) > .input-group-text,
.input-group > .input-group-prepend:first-child > .btn:not(:first-child),
.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {
    @include border-left-radius(0);
}


.input-group {
    &-addon {
        background-color: var(--color-secondary-foreground);
        border: thin solid var(--color-border);
        border-radius: $c-border-radius;
        color: inherit;
        font-size: 14px;
        font-weight: 400;
        line-height: 1;
        padding: 0 12px;
        text-align: center;
    }

    &-prepend &-addon {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-right-width: 0;
    }

    &-prepend {
        & .btn {
            //color: blue !important;
            border-right-width: 0 !important;
            border-radius: $c-border-radius;
        }

        & .btn ~ .dropdown .btn {
            //color: red !important;
            border-width: thin;
            border-right-width: thin !important;
            height: 30px;
            border-radius: 0;
        }

        & .dropdown {
            &-menu {
                position: absolute;
                transform: translate3d(0px, 35px, 0px) !important;
                top: 0px;
                left: 0px;
                will-change: transform;
            }

            & .btn {
                //color: purple !important;
                border-right-width: thin !important;
                border-top-right-radius: 0 !important;
                border-bottom-right-radius: 0 !important;
            }
        }

        & .btn:not([data-toggle='dropdown']) {
            //color:yellow !important;
            border-top-right-radius: 0 !important;
            border-bottom-right-radius: 0 !important;
        }
    }

    &-append &-addon {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        border-left-width: 0;
    }

    &-append {
        & .dropdown {
            &-menu {
                position: absolute;
                transform: translate3d(-83px, 35px, 0px) !important;
                top: 0px;
                left: 0px;
                will-change: transform;
                //background-color: red ;
            }

            & .btn {
                //color: blue !important;
                border-left-width: thin !important;
                border-top-left-radius: 0 !important;
                border-bottom-left-radius: 0 !important;
                height: 30px;
            }
        }

        & .btn ~ .dropdown .dropdown-menu {
            transform: translate3d(-130px, 35px, 0px) !important;
            //background-color: blue;
        }

        & .btn ~ .dropdown {

            & .btn {
                //color: red !important;
                border-left-width: 0px !important;
            }
        }
    }
}

/*
    B3
 */


//
// Input groups
// --------------------------------------------------

// Base styles
// -------------------------
.input-group {
    // Undo padding and float of grid classes
    &[class*="col-"] {
        float: none;
        padding-left: 0;
        padding-right: 0;
    }

    .dropdown-menu a {
        transition: $c-transition-time ease;
        border-radius: 0;
        margin: 0;
    }

    .dropdown-menu a:hover {
        color: var(--color-text-light);
        background-color: var(--color-primary);
    }

    .form-control {
        // Ensure that the input is always above the *appended* addon button for
        // proper border colors.
        position: relative;
        z-index: 2;

        // IE9 fubars the placeholder attribute in text inputs and the arrows on
        // select elements in input groups. To fix it, we float the input. Details:
        // https://github.com/twbs/bootstrap/issues/11561#issuecomment-28936855
        float: left;

        width: 1%;
        margin-bottom: 0;

        &:focus {
            z-index: 3;
        }
    }
}

// Display as table-cell
// -------------------------
.input-group-addon,
.input-group-btn,
.input-group .form-control {
    display: table-cell;

    &:not(:first-child):not(:last-child) {
        border-radius: 0;
    }
}

// Addon and addon wrapper for buttons
.input-group-addon,
.input-group-btn {
    //width: 1%;
    white-space: nowrap;
    vertical-align: middle; // Match the inputs

    @extend .input-group-prepend;
}

// Text input groups
// -------------------------
.input-group-addon {
    font-weight: normal;
    line-height: 1;
    text-align: center;
    display: flex;
    align-items: center;

    // Nuke default margins from checkboxes and radios to vertically center within.
    input[type="radio"],
    input[type="checkbox"] {
        margin-top: 0;
    }
}

// Reset rounded corners
.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group > .btn,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

.input-group-addon:first-child {
    border-right: 0;
}

.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group > .btn,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .btn:not(:first-child),
.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.input-group-addon:last-child {
    border-left: 0;
}

// Button input groups
// -------------------------

.input-group-btn {
    position: relative;
    // Jankily prevent input button groups from wrapping with `white-space` and
    // `font-size` in combination with `inline-block` on buttons.
    font-size: 0;
    white-space: nowrap;

    // Negative margin for spacing, position for bringing hovered/focused/actived
    // element above the siblings.
    > .btn {
        position: relative;

        + .btn {
            margin-left: -1px;
        }

        // Bring the "active" button to the front
        &:hover,
        &:focus,
        &:active {
            z-index: 2;
        }
    }

    // Negative margin to only have a 1px border between the two
    &:first-child {
        > .btn,
        > .btn-group {
            margin-right: -1px;
            //background-color: red !important;
        }

        > .btn {
            padding-bottom: calc(0.375rem + 1px);
        }
    }

    &:last-child {
        > .btn,
        > .btn-group {
            z-index: 2;
            margin-left: -1px;
        }
    }
}


